<!DOCTYPE html>
<html lang="ko">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>프로필 - SNS247</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.11.0/font/bootstrap-icons.css">
    <link rel="stylesheet" href="/css/post.css">
    <style>
        :root {
            --primary-color: #1da1f2;
            --secondary-color: #657786;
            --background-color: #f5f8fa;
            --border-color: #e1e8ed;
        }

        body {
            background-color: var(--background-color);
            font-family: -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, Helvetica, Arial, sans-serif;
        }

        /* 헤더 스타일 */
        .header {
            position: fixed;
            top: 0;
            left: 0;
            right: 0;
            background-color: white;
            border-bottom: 1px solid var(--border-color);
            z-index: 1000;
            padding: 10px 0;
        }

        .header-content {
            max-width: 600px;
            margin: 0 auto;
            padding: 0 15px;
            display: flex;
            align-items: center;
            gap: 15px;
        }

        /* 메인 컨텐츠 영역 */
        .main-content {
            max-width: 600px;
            margin: 60px auto 70px;
            background-color: white;
            min-height: calc(100vh - 130px);
        }

        /* 프로필 섹션 */
        .profile-section {
            padding: 20px;
            border-bottom: 1px solid var(--border-color);
        }

        .profile-header {
            display: flex;
            align-items: center;
            gap: 20px;
            margin-bottom: 20px;
        }

        .profile-image {
            width: 100px;
            height: 100px;
            border-radius: 50%;
            object-fit: cover;
        }

        .profile-info {
            flex: 1;
        }

        .profile-name {
            font-size: 1.5rem;
            font-weight: bold;
            margin-bottom: 5px;
        }

        .profile-email {
            color: var(--secondary-color);
            margin-bottom: 10px;
        }

        .profile-stats {
            display: flex;
            gap: 20px;
            margin-bottom: 15px;
        }

        .stat-item {
            text-align: center;
        }

        .stat-value {
            font-weight: bold;
            font-size: 1.2rem;
        }

        .stat-label {
            color: var(--secondary-color);
            font-size: 0.9rem;
        }

        .profile-edit-btn {
            background-color: var(--primary-color);
            color: white;
            border: none;
            padding: 8px 20px;
            border-radius: 20px;
            cursor: pointer;
            font-size: 0.9rem;
        }

        .profile-edit-btn:hover {
            opacity: 0.9;
        }

        /* 게시물 섹션 */
        .posts-section {
            padding: 15px;
        }

        .section-title {
            font-size: 1.2rem;
            font-weight: bold;
            margin-bottom: 15px;
            padding: 0 15px;
        }

        /* 프로필 수정 모달 */
        .profile-edit-modal {
            display: none;
            position: fixed;
            top: 0;
            left: 0;
            right: 0;
            bottom: 0;
            background: rgba(0, 0, 0, 0.5);
            z-index: 2000;
        }

        .profile-edit-modal.active {
            display: flex;
            align-items: center;
            justify-content: center;
        }

        .profile-edit-content {
            background: white;
            padding: 20px;
            border-radius: 15px;
            width: 90%;
            max-width: 400px;
        }

        .profile-edit-header {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 20px;
        }

        .profile-edit-header h5 {
            margin: 0;
        }

        .close-modal {
            background: none;
            border: none;
            font-size: 20px;
            cursor: pointer;
            color: var(--secondary-color);
        }

        .profile-edit-form {
            display: flex;
            flex-direction: column;
            gap: 15px;
        }

        .profile-edit-form input {
            padding: 10px;
            border: 1px solid var(--border-color);
            border-radius: 8px;
            font-size: 16px;
        }

        .profile-edit-form input:focus {
            outline: none;
            border-color: var(--primary-color);
        }

        .profile-edit-form button {
            background-color: var(--primary-color);
            color: white;
            border: none;
            padding: 10px;
            border-radius: 8px;
            font-size: 16px;
            cursor: pointer;
        }

        .profile-edit-form button:hover {
            opacity: 0.9;
        }
    </style>
</head>
<body>
    <!-- 헤더 -->
    <div class="header">
        <div class="header-content">
            <a href="/feed" class="text-decoration-none text-dark">
                <i class="bi bi-arrow-left"></i>
            </a>
            <h5 class="mb-0">프로필</h5>
            <div class="ms-auto position-relative">
                <img src="<%= currentUser.profileImage || '/images/default-profile.png' %>" 
                     alt="프로필" 
                     class="profile-image"
                     style="width: 32px; height: 32px; cursor: pointer;"
                     onclick="toggleProfileDropdown()">
                <%- include('partials/profile-dropdown') %>
            </div>
        </div>
    </div>

    <!-- 메인 컨텐츠 -->
    <div class="main-content">
        <!-- 프로필 섹션 -->
        <div class="profile-section">
            <div class="profile-header">
                <img src="<%= user.profileImage || '/images/default-profile.png' %>" 
                     alt="프로필" 
                     class="profile-image">
                <div class="profile-info">
                    <div class="profile-name"><%= user.name %></div>
                    <div class="profile-email"><%= user.email %></div>
                    <div class="profile-stats">
                        <div class="stat-item">
                            <div class="stat-value"><%= posts.length %></div>
                            <div class="stat-label">게시물</div>
                        </div>
                        <div class="stat-item">
                            <div class="stat-value"><%= user.followers ? user.followers.length : 0 %></div>
                            <div class="stat-label">팔로워</div>
                        </div>
                        <div class="stat-item">
                            <div class="stat-value"><%= user.following ? user.following.length : 0 %></div>
                            <div class="stat-label">팔로잉</div>
                        </div>
                    </div>
                    <% if (currentUser && currentUser.id === user.id) { %>
                        <button class="profile-edit-btn" onclick="showProfileEditModal()">
                            프로필 수정
                        </button>
                    <% } %>
                </div>
            </div>
        </div>

        <!-- 게시물 섹션 -->
        <div class="posts-section">
            <div class="section-title">게시물</div>
            <% if (posts && posts.length > 0) { %>
                <% posts.forEach(post => { %>
                    <%- include('partials/post', { post: post, currentUser: currentUser }) %>
                <% }); %>
            <% } else { %>
                <div class="text-center text-muted py-4">
                    아직 게시물이 없습니다.
                </div>
            <% } %>
        </div>

        <%- include('partials/navigation') %>
    </div>

    <!-- 프로필 수정 모달 -->
    <div class="modal fade" id="profileEditModal" tabindex="-1">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title">프로필 수정</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
                </div>
                <div class="modal-body">
                    <form id="profileEditForm">
                        <div class="mb-3">
                            <label for="newName" class="form-label">닉네임</label>
                            <input type="text" 
                                   class="form-control" 
                                   id="newName" 
                                   name="newName" 
                                   value="<%= user.name %>"
                                   required>
                        </div>
                    </form>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">취소</button>
                    <button type="button" class="btn btn-primary" onclick="updateProfile()">저장</button>
                </div>
            </div>
        </div>
    </div>

    <!-- 리포스트 모달 -->
    <div class="modal fade" id="repostModal" tabindex="-1">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title">리포스트</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
                </div>
                <div class="modal-body">
                    <form id="repostForm">
                        <input type="hidden" id="repostPostId" name="postId">
                        <div class="mb-3">
                            <textarea class="form-control" id="repostContent" name="content" rows="3" placeholder="리포스트 내용을 입력하세요..."></textarea>
                        </div>
                    </form>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">취소</button>
                    <button type="button" class="btn btn-primary" onclick="submitRepost()">리포스트</button>
                </div>
            </div>
        </div>
    </div>

    <!-- 게시글 수정 모달 -->
    <div class="modal fade" id="editPostModal" tabindex="-1">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title">게시글 수정</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
                </div>
                <div class="modal-body">
                    <form id="editPostForm">
                        <input type="hidden" id="editPostId">
                        <div class="mb-3">
                            <textarea class="form-control" id="editPostContent" rows="3" required></textarea>
                        </div>
                    </form>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">취소</button>
                    <button type="button" class="btn btn-primary" onclick="updatePost()">수정</button>
                </div>
            </div>
        </div>
    </div>

    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
    <script src="/js/post.js"></script>
    <script>
        // PostManager 인스턴스 생성
        const postManager = new PostManager();

        // 프로필 수정 모달 표시
        function showProfileEditModal() {
            const modal = new bootstrap.Modal(document.getElementById('profileEditModal'));
            modal.show();
        }

        // 프로필 수정
        async function updateProfile() {
            const newName = document.getElementById('newName').value;

            try {
                const response = await fetch('/profile/update-name', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify({ name: newName })
                });

                if (response.ok) {
                    window.location.reload();
                } else {
                    alert('닉네임 변경에 실패했습니다.');
                }
            } catch (error) {
                console.error('Error updating profile:', error);
                alert('닉네임 변경 중 오류가 발생했습니다.');
            }
        }

        // 리포스트 모달 표시
        function showRepostModal(postId) {
            const modal = document.getElementById('repostModal');
            const postIdInput = document.getElementById('repostPostId');
            postIdInput.value = postId;
            const bootstrapModal = new bootstrap.Modal(modal);
            bootstrapModal.show();
        }

        // 리포스트 제출
        async function submitRepost() {
            const postId = document.getElementById('repostPostId').value;
            const content = document.getElementById('repostContent').value;

            try {
                const response = await fetch(`/posts/${postId}/repost`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify({ content })
                });

                if (response.ok) {
                    const modal = document.getElementById('repostModal');
                    const bootstrapModal = bootstrap.Modal.getInstance(modal);
                    bootstrapModal.hide();
                    window.location.reload();
                } else {
                    const data = await response.json();
                    alert(data.error || '리포스트에 실패했습니다.');
                }
            } catch (error) {
                console.error('Error reposting:', error);
                alert('리포스트 중 오류가 발생했습니다.');
            }
        }
    </script>
</body>
</html>
