<!DOCTYPE html>
<html lang="ko">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title><%= profileUser.name %>의 프로필 - SNS247</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.11.0/font/bootstrap-icons.css">
    <style>
        :root {
            --primary-color: #1da1f2;
            --secondary-color: #657786;
            --background-color: #f5f8fa;
            --border-color: #e1e8ed;
        }

        body {
            background-color: var(--background-color);
            font-family: -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, Helvetica, Arial, sans-serif;
        }

        /* 헤더 스타일 */
        .header {
            position: fixed;
            top: 0;
            left: 0;
            right: 0;
            background-color: white;
            border-bottom: 1px solid var(--border-color);
            z-index: 1000;
            padding: 10px 0;
        }

        .header-content {
            max-width: 600px;
            margin: 0 auto;
            padding: 0 15px;
            display: flex;
            align-items: center;
            gap: 15px;
        }

        /* 메인 컨텐츠 영역 */
        .main-content {
            max-width: 600px;
            margin: 60px auto 70px;
            background-color: white;
            min-height: calc(100vh - 130px);
        }

        /* 프로필 헤더 */
        .profile-header {
            background-color: white;
            border-bottom: 1px solid var(--border-color);
            padding: 15px;
        }

        .profile-info {
            display: flex;
            flex-direction: column;
            align-items: center;
            text-align: center;
        }

        .profile-image {
            width: 80px;
            height: 80px;
            border-radius: 50%;
            object-fit: cover;
            margin-bottom: 15px;
        }

        .profile-name {
            font-size: 20px;
            font-weight: bold;
            margin-bottom: 5px;
        }

        .profile-username {
            color: var(--secondary-color);
            margin-bottom: 15px;
        }

        .profile-stats {
            display: flex;
            gap: 20px;
            margin-bottom: 15px;
        }

        .stat-item {
            display: flex;
            gap: 5px;
            color: var(--secondary-color);
        }

        .stat-value {
            font-weight: bold;
            color: black;
        }

        /* 게시물 스타일 */
        .post {
            padding: 15px;
            border-bottom: 1px solid var(--border-color);
            position: relative;
        }

        .post-header {
            display: flex;
            align-items: center;
            margin-bottom: 10px;
        }

        .post-header-info {
            display: flex;
            flex-direction: column;
        }

        .post-header-info h6 {
            margin-bottom: 2px;
        }

        .post-time {
            font-size: 12px;
            color: var(--secondary-color);
        }

        .post-content {
            margin: 10px 0;
            font-size: 15px;
            line-height: 1.5;
            width: 100%;
        }

        .post-image-container {
            width: 66.67%;
            margin: 15px auto;
            position: relative;
            overflow: hidden;
            background-color: #f8f9fa;
            border-radius: 15px;
            aspect-ratio: 1;
        }

        .post-image {
            position: absolute;
            top: 50%;
            left: 50%;
            transform: translate(-50%, -50%);
            width: 100%;
            height: 100%;
            object-fit: contain;
            object-position: center;
        }

        .post-actions {
            display: flex;
            gap: 20px;
            color: var(--secondary-color);
            margin-top: 10px;
        }

        .action-button {
            display: flex;
            align-items: center;
            gap: 5px;
            cursor: pointer;
            transition: color 0.2s;
        }

        .action-button:hover {
            color: var(--primary-color);
        }

        .action-button.liked {
            color: #e0245e;
        }

        /* 하단 네비게이션 바 */
        .bottom-nav {
            position: fixed;
            bottom: 0;
            left: 0;
            right: 0;
            background-color: white;
            border-top: 1px solid var(--border-color);
            z-index: 1000;
            padding: 10px 0;
        }

        .nav-content {
            max-width: 600px;
            margin: 0 auto;
            display: flex;
            justify-content: space-between;
            align-items: center;
            padding: 0 20px;
        }

        .nav-item {
            color: var(--secondary-color);
            text-decoration: none;
            display: flex;
            flex-direction: column;
            align-items: center;
            font-size: 12px;
            flex: 1;
            max-width: 80px;
        }

        .nav-item i {
            font-size: 20px;
            margin-bottom: 4px;
        }

        .nav-item.active {
            color: var(--primary-color);
        }

        /* 새 게시물 작성 버튼 */
        .new-post {
            position: fixed;
            bottom: 80px;
            right: 20px;
            width: 56px;
            height: 56px;
            border-radius: 50%;
            background-color: var(--primary-color);
            color: white;
            display: flex;
            align-items: center;
            justify-content: center;
            font-size: 24px;
            cursor: pointer;
            box-shadow: 0 2px 10px rgba(0,0,0,0.1);
            z-index: 999;
        }

        /* 프로필 이미지 변경 스타일 */
        .profile-image-container {
            position: relative;
            width: 120px;
            height: 120px;
            margin: 0 auto 20px;
        }

        .profile-image {
            width: 100%;
            height: 100%;
            border-radius: 50%;
            object-fit: cover;
            border: 3px solid var(--primary-color);
        }

        .profile-image-edit {
            position: absolute;
            bottom: 0;
            right: 0;
            background-color: var(--primary-color);
            color: white;
            width: 32px;
            height: 32px;
            border-radius: 50%;
            display: flex;
            align-items: center;
            justify-content: center;
            cursor: pointer;
            transition: background-color 0.2s;
        }

        .profile-image-edit:hover {
            background-color: #1a8cd8;
        }

        .profile-image-edit input[type="file"] {
            display: none;
        }

        /* 프로필 수정 모달 스타일 */
        .profile-edit-modal {
            display: none;
            position: fixed;
            top: 0;
            left: 0;
            right: 0;
            bottom: 0;
            background: rgba(0, 0, 0, 0.5);
            z-index: 2000;
        }

        .profile-edit-modal.active {
            display: flex;
            align-items: center;
            justify-content: center;
        }

        .profile-edit-content {
            background: white;
            padding: 20px;
            border-radius: 15px;
            width: 90%;
            max-width: 400px;
        }

        .profile-edit-header {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 20px;
        }

        .profile-edit-header h5 {
            margin: 0;
        }

        .close-modal {
            background: none;
            border: none;
            font-size: 20px;
            cursor: pointer;
            color: var(--secondary-color);
        }

        .profile-edit-form {
            display: flex;
            flex-direction: column;
            gap: 15px;
        }

        .profile-edit-form input {
            padding: 10px;
            border: 1px solid var(--border-color);
            border-radius: 8px;
            font-size: 16px;
        }

        .profile-edit-form input:focus {
            outline: none;
            border-color: var(--primary-color);
        }

        .profile-edit-form button {
            background-color: var(--primary-color);
            color: white;
            border: none;
            padding: 10px;
            border-radius: 8px;
            font-size: 16px;
            cursor: pointer;
        }

        .profile-edit-form button:hover {
            opacity: 0.9;
        }

        /* 프로필 이름 수정 버튼 스타일 */
        .edit-name-button {
            background: none;
            border: none;
            color: var(--secondary-color);
            cursor: pointer;
            padding: 0;
            margin-left: 8px;
        }

        .edit-name-button:hover {
            color: var(--primary-color);
        }
    </style>
</head>
<body>
    <!-- 헤더 -->
    <div class="header">
        <div class="header-content">
            <a href="/feed" class="text-decoration-none text-dark">
                <i class="bi bi-arrow-left"></i>
            </a>
            <div>
                <h5 class="mb-0"><%= profileUser.name %></h5>
                <small class="text-muted"><%= posts.length %> 게시물</small>
            </div>
            <div class="ms-auto position-relative">
                <img src="<%= currentUser.profileImage || '/images/default-profile.png' %>" 
                     alt="프로필" 
                     class="profile-image"
                     style="width: 32px; height: 32px; cursor: pointer;"
                     onclick="toggleProfileDropdown()">
                <%- include('partials/profile-dropdown') %>
            </div>
        </div>
    </div>

    <!-- 메인 컨텐츠 -->
    <div class="main-content">
        <!-- 프로필 헤더 -->
        <div class="profile-header">
            <div class="profile-info">
                <div class="profile-image-container">
                    <img src="<%= profileUser.profileImage || '/images/default-profile.png' %>" 
                         alt="프로필" 
                         class="profile-image">
                    <% if (currentUser && currentUser.id === profileUser.id) { %>
                        <label class="profile-image-edit">
                            <i class="bi bi-camera"></i>
                            <input type="file" 
                                   id="profileImageInput" 
                                   accept="image/*" 
                                   onchange="updateProfileImage(this)">
                        </label>
                    <% } %>
                </div>
                <div class="d-flex align-items-center">
                    <h4 class="profile-name mb-0"><%= profileUser.name %></h4>
                    <% if (currentUser && currentUser.id === profileUser.id) { %>
                        <button class="edit-name-button" onclick="openProfileEditModal()">
                            <i class="bi bi-pencil"></i>
                        </button>
                    <% } %>
                </div>
                <p class="profile-username">@<%= profileUser.email.split('@')[0] %></p>
                <div class="profile-stats">
                    <div class="stat-item">
                        <span class="stat-value"><%= posts.length %></span>
                        <span class="stat-label">게시물</span>
                    </div>
                    <div class="stat-item">
                        <span class="stat-value"><%= posts.reduce((sum, post) => sum + (post.likedBy?.length || 0), 0) %></span>
                        <span class="stat-label">좋아요</span>
                    </div>
                </div>
            </div>
        </div>

        <!-- 게시물 목록 -->
        <% if (posts.length === 0) { %>
            <div class="text-center text-muted mt-4">
                아직 작성한 게시물이 없습니다.
            </div>
        <% } else { %>
            <% posts.forEach(post => { %>
                <div class="post" onclick="window.location.href='/comments/post/<%= post.id %>'" style="cursor: pointer;">
                    <div class="post-header">
                        <img src="<%= post.author.profileImage || '/images/default-profile.png' %>" 
                             alt="프로필" 
                             class="profile-image"
                             style="width: 48px; height: 48px;">
                        <div class="post-header-info">
                            <h6 class="mb-0"><%= post.author.name %></h6>
                            <span class="post-time">
                                <%= new Date(post.createdAt).toLocaleString('ko-KR') %>
                            </span>
                        </div>
                    </div>
                    <div class="post-content">
                        <%= post.content %>
                    </div>
                    <% if (post.imageUrl) { %>
                        <div class="post-image-container">
                            <img src="<%= post.imageUrl %>" 
                                 alt="게시물 이미지" 
                                 class="post-image">
                        </div>
                    <% } %>
                    <div class="post-actions">
                        <div class="action-button like-button <%= post.likedBy.some(user => user.id === currentUser.id) ? 'liked' : '' %>" 
                             data-post-id="<%= post.id %>" 
                             data-liked="<%= post.likedBy.some(user => user.id === currentUser.id) %>"
                             onclick="event.stopPropagation();">
                            <i class="bi bi-heart<%= post.likedBy.some(user => user.id === currentUser.id) ? '-fill' : '' %>"></i>
                            <span class="likes-count"><%= post.likedBy?.length || 0 %></span>
                        </div>
                        <div class="action-button" onclick="event.stopPropagation();">
                            <a href="/comments/post/<%= post.id %>" class="text-decoration-none text-secondary">
                                <i class="bi bi-chat"></i>
                                <span><%= post.comments?.length || 0 %></span>
                            </a>
                        </div>
                        <div class="action-button" onclick="event.stopPropagation();">
                            <i class="bi bi-repeat"></i>
                            <span>0</span>
                        </div>
                    </div>
                </div>
            <% }); %>
        <% } %>
    </div>

    <%- include('partials/navigation') %>

    <!-- 프로필 수정 모달 -->
    <div class="profile-edit-modal" id="profileEditModal">
        <div class="profile-edit-content">
            <div class="profile-edit-header">
                <h5>프로필 수정</h5>
                <button class="close-modal" onclick="closeProfileEditModal()">
                    <i class="bi bi-x-lg"></i>
                </button>
            </div>
            <form class="profile-edit-form" id="profileEditForm">
                <input type="text" 
                       id="newName" 
                       name="newName" 
                       placeholder="새로운 닉네임" 
                       value="<%= profileUser.name %>"
                       required>
                <button type="submit">저장</button>
            </form>
        </div>
    </div>

    <script>
        // 좋아요 기능
        document.querySelectorAll('.like-button').forEach(button => {
            button.addEventListener('click', async function() {
                const postId = this.dataset.postId;
                const isLiked = this.dataset.liked === 'true';
                
                try {
                    const response = await fetch(`/feed/${postId}/like`, {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json'
                        }
                    });
                    
                    const data = await response.json();
                    
                    if (response.ok) {
                        const icon = this.querySelector('i');
                        const countSpan = this.querySelector('.likes-count');
                        
                        if (data.liked) {
                            icon.classList.remove('bi-heart');
                            icon.classList.add('bi-heart-fill');
                            this.classList.add('liked');
                        } else {
                            icon.classList.remove('bi-heart-fill');
                            icon.classList.add('bi-heart');
                            this.classList.remove('liked');
                        }
                        
                        countSpan.textContent = data.likes;
                        this.dataset.liked = data.liked;
                    }
                } catch (error) {
                    console.error('Error toggling like:', error);
                }
            });
        });

        // 프로필 사진 업데이트 함수
        async function updateProfileImage(input) {
            if (!input.files || !input.files[0]) {
                return;
            }

            const formData = new FormData();
            formData.append('profileImage', input.files[0]);

            try {
                const response = await fetch('/profile/update-profile-image', {
                    method: 'POST',
                    body: formData
                });

                if (response.ok) {
                    const data = await response.json();
                    // 모든 프로필 이미지 업데이트
                    document.querySelectorAll('img.profile-image').forEach(img => {
                        img.src = data.profileImage;
                    });
                    // 헤더의 프로필 이미지도 업데이트
                    const headerProfileImage = document.querySelector('.header img.profile-image');
                    if (headerProfileImage) {
                        headerProfileImage.src = data.profileImage;
                    }
                } else {
                    const error = await response.json();
                    alert(error.error || '프로필 사진 업데이트에 실패했습니다.');
                }
            } catch (error) {
                console.error('Error updating profile image:', error);
                alert('프로필 사진 업데이트 중 오류가 발생했습니다.');
            }
        }

        // 프로필 수정 모달 관련 함수
        function openProfileEditModal() {
            document.getElementById('profileEditModal').classList.add('active');
        }

        function closeProfileEditModal() {
            document.getElementById('profileEditModal').classList.remove('active');
        }

        // 프로필 수정 폼 제출 처리
        document.getElementById('profileEditForm').addEventListener('submit', async function(e) {
            e.preventDefault();
            
            const newName = document.getElementById('newName').value;
            
            try {
                const response = await fetch('/profile/update-name', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify({ name: newName })
                });
                
                if (response.ok) {
                    window.location.reload();
                } else {
                    const data = await response.json();
                    alert(data.error || '닉네임 변경에 실패했습니다.');
                }
            } catch (error) {
                console.error('Error updating profile:', error);
                alert('닉네임 변경 중 오류가 발생했습니다.');
            }
        });

        // 모달 외부 클릭 시 닫기
        document.getElementById('profileEditModal').addEventListener('click', function(e) {
            if (e.target === this) {
                closeProfileEditModal();
            }
        });
    </script>
</body>
</html>
